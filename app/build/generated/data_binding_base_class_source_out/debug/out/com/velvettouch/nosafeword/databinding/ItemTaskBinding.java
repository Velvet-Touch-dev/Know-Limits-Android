// Generated by view binder compiler. Do not edit!
package com.velvettouch.nosafeword.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.velvettouch.nosafeword.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTaskBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton deleteTaskButton;

  @NonNull
  public final ImageView dragHandleIcon;

  @NonNull
  public final CheckBox taskCheckbox;

  @NonNull
  public final TextView taskDeadlineTextview;

  @NonNull
  public final TextView taskTitleTextview;

  private ItemTaskBinding(@NonNull MaterialCardView rootView, @NonNull ImageButton deleteTaskButton,
      @NonNull ImageView dragHandleIcon, @NonNull CheckBox taskCheckbox,
      @NonNull TextView taskDeadlineTextview, @NonNull TextView taskTitleTextview) {
    this.rootView = rootView;
    this.deleteTaskButton = deleteTaskButton;
    this.dragHandleIcon = dragHandleIcon;
    this.taskCheckbox = taskCheckbox;
    this.taskDeadlineTextview = taskDeadlineTextview;
    this.taskTitleTextview = taskTitleTextview;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_task_button;
      ImageButton deleteTaskButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteTaskButton == null) {
        break missingId;
      }

      id = R.id.drag_handle_icon;
      ImageView dragHandleIcon = ViewBindings.findChildViewById(rootView, id);
      if (dragHandleIcon == null) {
        break missingId;
      }

      id = R.id.task_checkbox;
      CheckBox taskCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (taskCheckbox == null) {
        break missingId;
      }

      id = R.id.task_deadline_textview;
      TextView taskDeadlineTextview = ViewBindings.findChildViewById(rootView, id);
      if (taskDeadlineTextview == null) {
        break missingId;
      }

      id = R.id.task_title_textview;
      TextView taskTitleTextview = ViewBindings.findChildViewById(rootView, id);
      if (taskTitleTextview == null) {
        break missingId;
      }

      return new ItemTaskBinding((MaterialCardView) rootView, deleteTaskButton, dragHandleIcon,
          taskCheckbox, taskDeadlineTextview, taskTitleTextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
