// Generated by view binder compiler. Do not edit!
package com.velvettouch.nosafeword.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.navigation.NavigationView;
import com.google.android.material.tabs.TabLayout;
import com.velvettouch.nosafeword.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFavoritesBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final LinearLayout emptyFavoritesView;

  @NonNull
  public final FrameLayout favoritesContainer;

  @NonNull
  public final TextView favoritesSwipeTipTextView;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final RecyclerView positionFavoritesRecyclerView;

  @NonNull
  public final RecyclerView sceneFavoritesRecyclerView;

  @NonNull
  public final TabLayout tabs;

  @NonNull
  public final Toolbar toolbar;

  private ActivityFavoritesBinding(@NonNull DrawerLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull DrawerLayout drawerLayout,
      @NonNull LinearLayout emptyFavoritesView, @NonNull FrameLayout favoritesContainer,
      @NonNull TextView favoritesSwipeTipTextView, @NonNull NavigationView navView,
      @NonNull RecyclerView positionFavoritesRecyclerView,
      @NonNull RecyclerView sceneFavoritesRecyclerView, @NonNull TabLayout tabs,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.drawerLayout = drawerLayout;
    this.emptyFavoritesView = emptyFavoritesView;
    this.favoritesContainer = favoritesContainer;
    this.favoritesSwipeTipTextView = favoritesSwipeTipTextView;
    this.navView = navView;
    this.positionFavoritesRecyclerView = positionFavoritesRecyclerView;
    this.sceneFavoritesRecyclerView = sceneFavoritesRecyclerView;
    this.tabs = tabs;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFavoritesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFavoritesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_favorites, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFavoritesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.empty_favorites_view;
      LinearLayout emptyFavoritesView = ViewBindings.findChildViewById(rootView, id);
      if (emptyFavoritesView == null) {
        break missingId;
      }

      id = R.id.favorites_container;
      FrameLayout favoritesContainer = ViewBindings.findChildViewById(rootView, id);
      if (favoritesContainer == null) {
        break missingId;
      }

      id = R.id.favorites_swipe_tip_text_view;
      TextView favoritesSwipeTipTextView = ViewBindings.findChildViewById(rootView, id);
      if (favoritesSwipeTipTextView == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.position_favorites_recycler_view;
      RecyclerView positionFavoritesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (positionFavoritesRecyclerView == null) {
        break missingId;
      }

      id = R.id.scene_favorites_recycler_view;
      RecyclerView sceneFavoritesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (sceneFavoritesRecyclerView == null) {
        break missingId;
      }

      id = R.id.tabs;
      TabLayout tabs = ViewBindings.findChildViewById(rootView, id);
      if (tabs == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityFavoritesBinding((DrawerLayout) rootView, appBarLayout, drawerLayout,
          emptyFavoritesView, favoritesContainer, favoritesSwipeTipTextView, navView,
          positionFavoritesRecyclerView, sceneFavoritesRecyclerView, tabs, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
