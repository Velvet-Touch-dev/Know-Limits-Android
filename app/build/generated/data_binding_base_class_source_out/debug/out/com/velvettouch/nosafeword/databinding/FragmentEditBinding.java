// Generated by view binder compiler. Do not edit!
package com.velvettouch.nosafeword.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.velvettouch.nosafeword.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentEditBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FloatingActionButton addSceneFab;

  @NonNull
  public final RecyclerView editRecyclerView;

  @NonNull
  public final ExtendedFloatingActionButton resetScenesButton;

  private FragmentEditBinding(@NonNull FrameLayout rootView,
      @NonNull FloatingActionButton addSceneFab, @NonNull RecyclerView editRecyclerView,
      @NonNull ExtendedFloatingActionButton resetScenesButton) {
    this.rootView = rootView;
    this.addSceneFab = addSceneFab;
    this.editRecyclerView = editRecyclerView;
    this.resetScenesButton = resetScenesButton;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_scene_fab;
      FloatingActionButton addSceneFab = ViewBindings.findChildViewById(rootView, id);
      if (addSceneFab == null) {
        break missingId;
      }

      id = R.id.edit_recycler_view;
      RecyclerView editRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (editRecyclerView == null) {
        break missingId;
      }

      id = R.id.reset_scenes_button;
      ExtendedFloatingActionButton resetScenesButton = ViewBindings.findChildViewById(rootView, id);
      if (resetScenesButton == null) {
        break missingId;
      }

      return new FragmentEditBinding((FrameLayout) rootView, addSceneFab, editRecyclerView,
          resetScenesButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
