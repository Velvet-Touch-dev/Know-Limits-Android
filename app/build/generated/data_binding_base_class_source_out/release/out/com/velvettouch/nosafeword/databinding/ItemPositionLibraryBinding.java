// Generated by view binder compiler. Do not edit!
package com.velvettouch.nosafeword.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.velvettouch.nosafeword.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPositionLibraryBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton positionLibraryDeleteButton;

  @NonNull
  public final ImageView positionLibraryImage;

  @NonNull
  public final TextView positionLibraryName;

  @NonNull
  public final LinearLayout textContentArea;

  private ItemPositionLibraryBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageButton positionLibraryDeleteButton, @NonNull ImageView positionLibraryImage,
      @NonNull TextView positionLibraryName, @NonNull LinearLayout textContentArea) {
    this.rootView = rootView;
    this.positionLibraryDeleteButton = positionLibraryDeleteButton;
    this.positionLibraryImage = positionLibraryImage;
    this.positionLibraryName = positionLibraryName;
    this.textContentArea = textContentArea;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPositionLibraryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPositionLibraryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_position_library, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPositionLibraryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.position_library_delete_button;
      ImageButton positionLibraryDeleteButton = ViewBindings.findChildViewById(rootView, id);
      if (positionLibraryDeleteButton == null) {
        break missingId;
      }

      id = R.id.position_library_image;
      ImageView positionLibraryImage = ViewBindings.findChildViewById(rootView, id);
      if (positionLibraryImage == null) {
        break missingId;
      }

      id = R.id.position_library_name;
      TextView positionLibraryName = ViewBindings.findChildViewById(rootView, id);
      if (positionLibraryName == null) {
        break missingId;
      }

      id = R.id.text_content_area;
      LinearLayout textContentArea = ViewBindings.findChildViewById(rootView, id);
      if (textContentArea == null) {
        break missingId;
      }

      return new ItemPositionLibraryBinding((MaterialCardView) rootView,
          positionLibraryDeleteButton, positionLibraryImage, positionLibraryName, textContentArea);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
