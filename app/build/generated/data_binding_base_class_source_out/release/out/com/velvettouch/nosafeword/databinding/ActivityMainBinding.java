// Generated by view binder compiler. Do not edit!
package com.velvettouch.nosafeword.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.core.widget.NestedScrollView;
import androidx.drawerlayout.widget.DrawerLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.navigation.NavigationView;
import com.velvettouch.nosafeword.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final DrawerLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final FrameLayout contentContainer;

  @NonNull
  public final TextView contentTextView;

  @NonNull
  public final DrawerLayout drawerLayout;

  @NonNull
  public final FloatingActionButton editButton;

  @NonNull
  public final FrameLayout editContainer;

  @NonNull
  public final LinearLayout emptyFavoritesView;

  @NonNull
  public final FrameLayout favoritesContainer;

  @NonNull
  public final RecyclerView favoritesRecyclerView;

  @NonNull
  public final NavigationView navView;

  @NonNull
  public final LinearLayout navigationButtons;

  @NonNull
  public final FloatingActionButton previousButton;

  @NonNull
  public final NestedScrollView randomContent;

  @NonNull
  public final FloatingActionButton randomizeButton;

  @NonNull
  public final MaterialCardView sceneCardView;

  @NonNull
  public final MaterialButton shareButton;

  @NonNull
  public final TextView titleTextView;

  @NonNull
  public final Toolbar topAppBar;

  private ActivityMainBinding(@NonNull DrawerLayout rootView, @NonNull AppBarLayout appBarLayout,
      @NonNull BottomNavigationView bottomNavigation, @NonNull FrameLayout contentContainer,
      @NonNull TextView contentTextView, @NonNull DrawerLayout drawerLayout,
      @NonNull FloatingActionButton editButton, @NonNull FrameLayout editContainer,
      @NonNull LinearLayout emptyFavoritesView, @NonNull FrameLayout favoritesContainer,
      @NonNull RecyclerView favoritesRecyclerView, @NonNull NavigationView navView,
      @NonNull LinearLayout navigationButtons, @NonNull FloatingActionButton previousButton,
      @NonNull NestedScrollView randomContent, @NonNull FloatingActionButton randomizeButton,
      @NonNull MaterialCardView sceneCardView, @NonNull MaterialButton shareButton,
      @NonNull TextView titleTextView, @NonNull Toolbar topAppBar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.bottomNavigation = bottomNavigation;
    this.contentContainer = contentContainer;
    this.contentTextView = contentTextView;
    this.drawerLayout = drawerLayout;
    this.editButton = editButton;
    this.editContainer = editContainer;
    this.emptyFavoritesView = emptyFavoritesView;
    this.favoritesContainer = favoritesContainer;
    this.favoritesRecyclerView = favoritesRecyclerView;
    this.navView = navView;
    this.navigationButtons = navigationButtons;
    this.previousButton = previousButton;
    this.randomContent = randomContent;
    this.randomizeButton = randomizeButton;
    this.sceneCardView = sceneCardView;
    this.shareButton = shareButton;
    this.titleTextView = titleTextView;
    this.topAppBar = topAppBar;
  }

  @Override
  @NonNull
  public DrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.content_container;
      FrameLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.contentTextView;
      TextView contentTextView = ViewBindings.findChildViewById(rootView, id);
      if (contentTextView == null) {
        break missingId;
      }

      DrawerLayout drawerLayout = (DrawerLayout) rootView;

      id = R.id.editButton;
      FloatingActionButton editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.edit_container;
      FrameLayout editContainer = ViewBindings.findChildViewById(rootView, id);
      if (editContainer == null) {
        break missingId;
      }

      id = R.id.empty_favorites_view;
      LinearLayout emptyFavoritesView = ViewBindings.findChildViewById(rootView, id);
      if (emptyFavoritesView == null) {
        break missingId;
      }

      id = R.id.favorites_container;
      FrameLayout favoritesContainer = ViewBindings.findChildViewById(rootView, id);
      if (favoritesContainer == null) {
        break missingId;
      }

      id = R.id.favorites_recycler_view;
      RecyclerView favoritesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (favoritesRecyclerView == null) {
        break missingId;
      }

      id = R.id.nav_view;
      NavigationView navView = ViewBindings.findChildViewById(rootView, id);
      if (navView == null) {
        break missingId;
      }

      id = R.id.navigation_buttons;
      LinearLayout navigationButtons = ViewBindings.findChildViewById(rootView, id);
      if (navigationButtons == null) {
        break missingId;
      }

      id = R.id.previousButton;
      FloatingActionButton previousButton = ViewBindings.findChildViewById(rootView, id);
      if (previousButton == null) {
        break missingId;
      }

      id = R.id.random_content;
      NestedScrollView randomContent = ViewBindings.findChildViewById(rootView, id);
      if (randomContent == null) {
        break missingId;
      }

      id = R.id.randomizeButton;
      FloatingActionButton randomizeButton = ViewBindings.findChildViewById(rootView, id);
      if (randomizeButton == null) {
        break missingId;
      }

      id = R.id.sceneCardView;
      MaterialCardView sceneCardView = ViewBindings.findChildViewById(rootView, id);
      if (sceneCardView == null) {
        break missingId;
      }

      id = R.id.shareButton;
      MaterialButton shareButton = ViewBindings.findChildViewById(rootView, id);
      if (shareButton == null) {
        break missingId;
      }

      id = R.id.titleTextView;
      TextView titleTextView = ViewBindings.findChildViewById(rootView, id);
      if (titleTextView == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      Toolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      return new ActivityMainBinding((DrawerLayout) rootView, appBarLayout, bottomNavigation,
          contentContainer, contentTextView, drawerLayout, editButton, editContainer,
          emptyFavoritesView, favoritesContainer, favoritesRecyclerView, navView, navigationButtons,
          previousButton, randomContent, randomizeButton, sceneCardView, shareButton, titleTextView,
          topAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
